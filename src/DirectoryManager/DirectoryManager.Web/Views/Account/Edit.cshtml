@using DirectoryManager.Data.Models
@model DirectoryManager.Data.Models.Category
@inject DirectoryManager.Data.Repositories.Interfaces.ICategoryRepository categoryRepository
@inject DirectoryManager.Data.Repositories.Interfaces.ISubCategoryRepository subCategoryRepository
@inject DirectoryManager.Data.Repositories.Interfaces.IDirectoryEntryRepository directoryEntryRepository

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!-- Rest of your view above -->
@{
    ViewData["Title"] = "Directory Entries";
}
<h1>@ViewData["Title"]</h1>
 
<p><b id="categories">Categories</b></p>

@await Html.PartialAsync("_AdminMenu")

<hr />

<ul id="categories_list">

    @foreach (var category in await categoryRepository.GetAllAsync())
    {
        <li>
            <label for="@string.Format("{0}_checkbox", category.CategoryKey)">+</label>
            <a href="#@category.CategoryKey">@category.Name</a>
            <input type="checkbox" id="@string.Format("{0}_checkbox", category.CategoryKey)" />
            <div class="hidden">
             <ul>
            @foreach (var subCategory in await subCategoryRepository.GetByCategoryAsync(category.Id))
            {
                <li>
                    <a href="#@category.CategoryKey-@subCategory.SubCategoryKey">@subCategory.Name</a>
                </li>
            }
            </ul>
            </div>
        </li>
        }
    </ul>

@foreach (var category in await categoryRepository.GetAllAsync())
{
    <h2 id="@category.CategoryKey">@category.Name</h2> <a href="~/category/edit/@category.Id">Edit</a>

    <i>@category.Note</i>

    @foreach (var subCategory in await subCategoryRepository.GetByCategoryAsync(category.Id))
    {
        <h3 id="@category.CategoryKey-@subCategory.SubCategoryKey">@subCategory.Name</h3>  <a href="~/subcategory/edit/@subCategory.Id">Edit</a>
        <i>@subCategory.Note</i>

        <ul>
            @foreach (var directoryEntry in await directoryEntryRepository.GetAllBySubCategoryIdAsync(subCategory.Id))
            {
                <li>
                    @if (string.IsNullOrWhiteSpace(directoryEntry.Description))
                    {
                        <p>  <a href="@directoryEntry.Link">@directoryEntry.Name</a></p>  <a href="~/directoryentry/edit/@directoryEntry.Id">Edit</a>
                    }
                    else
                    {
                        <p>  <a href="@directoryEntry.Link">@directoryEntry.Name</a> - @directoryEntry.Description</p>  <a href="~/directoryentry/edit/@directoryEntry.Id">Edit</a>
                    }
                </li>
            }
        </ul>

    }

    <p class="right">
        <a href="#categories">&#x2191; Categories</a>
    </p>

    <hr />
}