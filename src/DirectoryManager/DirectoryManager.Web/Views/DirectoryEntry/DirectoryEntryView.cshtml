@using DirectoryManager.Data.Enums
@using DirectoryManager.Web.Constants
@using DirectoryManager.Web.Helpers
@using DirectoryManager.Web.Models
@model DirectoryManager.DisplayFormatting.Models.DirectoryEntryViewModel
@inject DirectoryManager.Web.Services.Interfaces.ICacheService cacheHelper
@{
    ViewData["Title"] = Model.Name;
    var categoryKey = ViewBag.CategoryKey as string;
    var subCategoryKey = ViewBag.SubCategoryKey as string;
    var categoryName = ViewBag.CategoryName as string;
    var subCategoryName = ViewBag.SubCategoryName as string;

    // Determine which links to use based on the availability of "A" versions
    var finalLink = !string.IsNullOrEmpty(Model.LinkA) ? Model.LinkA : Model.Link;
    var finalLink2 = !string.IsNullOrEmpty(Model.Link2A) ? Model.Link2A : Model.Link2;
    var finalLink3 = !string.IsNullOrEmpty(Model.Link3A) ? Model.Link3A : Model.Link3;
    var domain = cacheHelper.GetSnippet(SiteConfigSetting.CanonicalDomain);

    // Build your breadcrumb list dynamically based on page context
    var breadcrumbs = new List<BreadcrumbItem>
    {
        new BreadcrumbItem { Position = 1, Name = "Home", Url = UrlHelper.MakeFullUrl(domain,"/") },
        new BreadcrumbItem { Position = 2, Name = "Sitemap", Url = UrlHelper.MakeFullUrl(domain,"/sitemap") },
        new BreadcrumbItem { Position = 3, Name = @categoryName, Url = UrlHelper.MakeFullUrl(domain,$"/{@categoryKey}") },
        new BreadcrumbItem { Position = 4, Name = @subCategoryName, Url = UrlHelper.MakeFullUrl(domain,$"/{@categoryKey}/{@subCategoryKey}")  },
        new BreadcrumbItem { Position = 5, Name = Model.Name, Url = UrlHelper.MakeFullUrl(domain,$"/{@categoryKey}/{@subCategoryKey}/{@Model.DirectoryEntryKey}")  }
    };
}

@BreadcrumbJsonHelper.GenerateBreadcrumbJson(breadcrumbs)

<h1>@Model.Name</h1>
<hr />

<div class="directory-entry-details">

    <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
                <a class="no-app-link" href="~/">Home</a>
        </li>
        <li class="breadcrumb-item">
            <a class="no-app-link" href="~/sitemap">Sitemap</a></li>
        <li class="breadcrumb-item">
            <a class="no-app-link" href="~/@categoryKey">@categoryName</a>
        </li>
        <li class="breadcrumb-item">
            <a class="no-app-link" href="~/@categoryKey/@subCategoryKey">@subCategoryName</a>
        </li>
        <li class="breadcrumb-item" aria-current="page">
            @Model.Name
        </li>
    </ol>
    </nav>

    <div class="entry-details">
        <p><strong>Name:</strong> @Model.Name</p>
        @if (!string.IsNullOrEmpty(finalLink))
        {
            <p><strong>Link:</strong> <a class="multi-line-text" href="@finalLink" target="_blank">@Model.Link</a></p>
        }
        @if (!string.IsNullOrEmpty(finalLink2))
        {
            <p><strong>@Model.Link2Name:</strong> <a class="multi-line-text" href="@finalLink2" target="_blank">@Model.Link2</a></p>
        }
        @if (!string.IsNullOrEmpty(finalLink3))
        {
            <p><strong>@Model.Link3Name:</strong> <a class="multi-line-text" href="@finalLink3" target="_blank">@Model.Link3</a></p>
        }
        <p>
            <strong>Status:</strong>
            @if (Model.DirectoryStatus == DirectoryManager.Data.Enums.DirectoryStatus.Verified)
            {
                <text>&#9989;</text>
            }
            else if (Model.DirectoryStatus == DirectoryManager.Data.Enums.DirectoryStatus.Scam)
            {
                <text>&#10060;</text>
            }
          @Model.DirectoryStatus
        </p>

        @if (!string.IsNullOrEmpty(Model.Contact))
        {
            <p><strong>Contact:</strong> <span class="multi-line-text">@Model.Contact</span></p>
        }
     
        @if (!string.IsNullOrEmpty(Model.Location))
        {
            <p><strong>Location:</strong> @Model.Location</p>
        }
        @if (!string.IsNullOrEmpty(Model.Processor))
        {
            <p><strong>Processor:</strong> @Model.Processor</p>
        }

        <p><strong>Added On:</strong> @Model.CreateDate.ToString(DirectoryManager.Common.Constants.StringConstants.DateFormat)</p>
        @if (Model.UpdateDate.HasValue)
        {
            <p><strong>Last Updated:</strong> @Model.UpdateDate?.ToString(DirectoryManager.Common.Constants.StringConstants.DateFormat)</p>
        }

        @if (!string.IsNullOrEmpty(Model.Description))
        {
            <br />
            <h3>Description</h3>
            <p>@Model.Description</p>
        }

        @if (!string.IsNullOrEmpty(Model.Note))
        {
            <br />
            <h4>Note</h4>
            <p><i>@Html.Raw(Model.Note)</i></p>
        }
    </div>
</div>

<hr />
@await Html.PartialAsync("_SponsoredListingPartial")