@model DirectoryManager.Web.Models.HtmlSiteMapModel
@using DirectoryManager.Data.Enums;
@using DirectoryManager.Web.Constants;
@using DirectoryManager.Web.Helpers
@using DirectoryManager.Web.Models
@inject DirectoryManager.Web.Services.Interfaces.ICacheService cacheHelper

@{
    ViewData[StringConstants.TitleHeader] = string.Format("{0}: Sitemap", cacheHelper.GetSnippet(SiteConfigSetting.SiteName));
    var domain = cacheHelper.GetSnippet(SiteConfigSetting.CanonicalDomain);

    // Build your breadcrumb list dynamically based on page context
    var breadcrumbs = new List<BreadcrumbItem>
    {
        new BreadcrumbItem { Position = 1, Name = "Home", Url = UrlHelper.MakeFullUrl(domain,"/") },
        new BreadcrumbItem { Position = 2, Name = StringConstants.AllCategories, Url = UrlHelper.MakeFullUrl(domain,"/sitemap") }
    };
}

@BreadcrumbJsonHelper.GenerateBreadcrumbJson(breadcrumbs)

<h1>Sitemap : @StringConstants.AllCategories</h1>
<hr />

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a class="no-app-link" href="~/">Home</a>
        </li>
        <li class="breadcrumb-item" aria-current="page">@StringConstants.AllCategories</li>
    </ol>
</nav>
 
@if (Model.SectionPages.Count > 0)
{
    <section>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <ul>
                        @foreach (var item in Model.SectionPages)
                        {
                            <li>
                                <a class="no-app-link" title="@item.AnchorText" href="@item.CanonicalUrl">@item.AnchorText</a>                            
                            </li>
                        }

                    </ul>
                </div>
            </div>
        </div>
     </section>
}

<hr />

@await Html.PartialAsync("_SponsoredListingPartial")