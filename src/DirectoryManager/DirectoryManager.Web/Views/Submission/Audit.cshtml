@model IEnumerable<DirectoryManager.Data.Models.DirectoryEntriesAudit>
@using DirectoryManager.Web.Constants;
@using DirectoryManager.Web.Models
@{
    var firstOrDefault = Model.FirstOrDefault();

    if (firstOrDefault == null)
    {
        return;
    }

ViewData["Title"] = "Audit: " + @firstOrDefault.DirectoryEntryId;

}
<h1>@ViewData["Title"]</h1>

@{
    if (firstOrDefault  != null)
    {
        <a href="~/submission/submitedit/@firstOrDefault.DirectoryEntryId">edit</a>
    }
}
|
<a href="~/submission/findexisting">all listings</a>
|
@await Html.PartialAsync("_BackToHome")

<hr />

<table>
    <thead>
        <tr>
            <th>Status</th>
            <th>Name</th>
            <th>Link</th>
            <th>Description</th>
            <th>Location</th>
            <th>Note</th>
            <th>Contact</th>
            <th>SubCategoryId</th>
            <th>Created Date</th> 
            <th>Updated Date</th> 
        </tr>
    </thead>
    <tbody>
        @foreach (var audit in Model)
        {
            <tr>
                <td>
                    @if (audit.DirectoryStatus == DirectoryManager.Data.Enums.DirectoryStatus.Verified)
                    {
                        <text>&#9989;</text> 
                    }
                    else if (audit.DirectoryStatus == DirectoryManager.Data.Enums.DirectoryStatus.Scam)
                    {
                        <text>&#10060;</text>
                    }
                    else 
                    {
                        @audit.DirectoryStatus
                    }
                </td>
                <td>@audit.Name</td>
                <td>@audit.Link</td>
                <td>@audit.Description</td>
                <td>@audit.Location</td>
                <td>@audit.Note</td>
                <td>@audit.Contact</td>
                <td>@audit.SubCategoryId</td>
                <td>@audit.CreateDate</td>  
                <td>@audit.UpdateDate</td>  
            </tr>
        }
    </tbody>
</table>

<hr />
<h3>Current View Of Listing</h3>

@if (((DirectoryEntryViewModel)ViewBag.SelectedDirectoryEntry).DirectoryEntry.DirectoryStatus == DirectoryManager.Data.Enums.DirectoryStatus.Removed)
{
    <i>Removed</i>
}
else 
{
    <ul>
        @await Html.PartialAsync("_DirectoryEntryPartial", (DirectoryEntryViewModel)ViewBag.SelectedDirectoryEntry)
    </ul>
}
<hr />

@await Html.PartialAsync("_SponsoredListingPartial")