@using DirectoryManager.Web.Constants;
@using DirectoryManager.Web.Models
@using System.Globalization;
@using DirectoryManager.Data.Enums
@model DirectoryManager.Web.Models.ConfirmSelectionViewModel;
@inject DirectoryManager.Web.Services.Interfaces.ICacheService _cacheHelper

@{
    ViewData["Title"] = "Confirm Selection";
}

<h1>@ViewData["Title"]</h1>

<hr />

<div>

    @{
        Model.SelectedDirectoryEntry.IsSponsored = true;
    }

    @if (Model.CanCreateSponsoredListing)
    {
        <h2>Selected Listing</h2>

        <ul>
            @await Html.PartialAsync("_DirectoryEntryPartial", Model.SelectedDirectoryEntry)
        </ul>

        <hr />

        <h2>Your Order</h2>
        <p>
            <b>Sponsorship Type:</b> @DirectoryManager.Utilities.Helpers.EnumHelper.GetDescription(Model.Offer.SponsorshipType) <br />
            <b>Description:</b> @Model.Offer.Description<br />
            <b>Price:</b> @Model.Offer.USDPrice.ToString("C", new CultureInfo(StringConstants.DefaultCulure)) USD<br />
            <b>Days:</b> @Model.Offer.Days
        </p>

        if (Model.IsExtension)
        {
            <p>
                <b>Order note:</b> These days will be added to the current listing.
            </p>
        }

        <p>
            <i>
                @Html.Raw(_cacheHelper.GetSnippet(SiteConfigSetting.NowPaymentsMessage))             
            </i>
        </p>

        <form method="post" action="~/sponsoredlisting/confirmnowpayments">
            <input name="rsvId" type="hidden" value="@ViewBag.ReservationGuid" />
            <input type="hidden" name="directoryEntryId" value="@Model.SelectedDirectoryEntry.DirectoryEntry.DirectoryEntryId" />
            <input type="hidden" name="selectedOfferId" value="@Model.Offer.SponsoredListingOfferId" />
            <button class="btn" type="submit">Purchase Listing</button>
        </form>
    }
    else
    {
        @await Html.PartialAsync("_AdSpaceFull", new ListingInventoryModel() 
        { CanCreateSponsoredListing = Model.CanCreateSponsoredListing,
         NextListingExpiration = Model.NextListingExpiration});
    }

</div>