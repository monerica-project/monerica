@using DirectoryManager.Web.Constants;
@using DirectoryManager.Web.Models
@using System.Globalization;
@using DirectoryManager.Data.Enums
@model DirectoryManager.Web.Models.ConfirmSelectionViewModel;
@inject DirectoryManager.Web.Services.Interfaces.ICacheService _cacheHelper
@using DirectoryManager.Utilities.Helpers
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor
@inject NowPayments.API.Interfaces.INowPaymentsService nowPaymentsService
@using DirectoryManager.Web.Helpers
@using Microsoft.Extensions.Caching.Memory
@inject IMemoryCache memoryCache

@{
    ViewData[StringConstants.TitleHeader] = "Confirm Selection";
}

@{
    Layout = "_CenteredLayout";
}

 
@{
    var conversionResult = await CurrencyConversionHelper.GetConversionContextAsync(httpContextAccessor, memoryCache, nowPaymentsService);
    bool showConverted = conversionResult.showConverted;
    decimal conversionRate = conversionResult.conversionRate;
}


@section PageContent {
<h1>@ViewData[StringConstants.TitleHeader]</h1>

<hr />

<div>

    @{
        Model.SelectedDirectoryEntry.IsSponsored = true;
    }

    @if (Model.CanCreateSponsoredListing)
    {
        <h2>Selected Listing</h2>

        <ul class="blank_list_item">
            @await Html.PartialAsync("_DirectoryEntryPartial", Model.SelectedDirectoryEntry)
        </ul>

        <hr />

        <h2>Your Order</h2>
        <br />
        <table>
            <tr>
                <td>
                    <b>Sponsorship Type:</b>
                </td>
                <td>
                     @DirectoryManager.Utilities.Helpers.EnumHelper.GetDescription(Model.Offer.SponsorshipType)
                </td>
            </tr>
            <tr>
                <td>
                    <b>Description:</b>
                </td>
                <td>
                    @Model.Offer.Description
                </td>
            </tr>
            <tr>
                <td>
                    <b>Days:</b>
                </td>
                <td>
                  @Model.Offer.Days
                </td>
            </tr>
            <tr>
                <td>
                    <b>Price:</b>
                </td>
                <td>
                     @Model.Offer.USDPrice.ToString(DirectoryManager.Common.Constants.StringConstants.CurrentFormat,
        new CultureInfo(DirectoryManager.Common.Constants.StringConstants.DefaultCulure)) @DirectoryManager.Data.Enums.Currency.USD.ToString()

        <i>(Approximately: @DirectoryManager.Utilities.Helpers.CurrencyFormatter.Format(Model.Offer.USDPrice, conversionRate, conversionResult.selectedCurrency, true))</i>
                </td>
            </tr>
        </table>
       
        if (Model.IsExtension)
        {
            <p>
                These days will be added to the current listing.
            </p>
        }

        @Html.Raw(_cacheHelper.GetSnippet(SiteConfigSetting.NowPaymentsMessageHtml))

        <form method="post" action="~/sponsoredlisting/confirmnowpayments">
            <hr />
            
            <div class="form-group">
                <i>Receive a reminder before your listing expires so you can renew in time.</i>
                <label>Email (optional)</label>
                <input style="width:18%;" name="email" type="email" placeholder="yourname@email.com" />
            </div>
           
            <input name="rsvId" type="hidden" value="@ViewBag.ReservationGuid" />
            <input type="hidden" name="directoryEntryId" value="@Model.SelectedDirectoryEntry.DirectoryEntryId" />
            <input type="hidden" name="selectedOfferId" value="@Model.Offer.SponsoredListingOfferId" />

            <button class="btn" type="submit">Purchase Listing</button>
        </form>
    }
    else
    {

        @await Html.PartialAsync("_AdSpaceFull", new ListingInventoryModel() 
        { CanCreateSponsoredListing = Model.CanCreateSponsoredListing,
         NextListingExpiration = Model.NextListingExpiration});
    }

</div>
}