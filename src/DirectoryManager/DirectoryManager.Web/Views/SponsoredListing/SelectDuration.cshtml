@using DirectoryManager.Web.Constants
@using DirectoryManager.Web.Models
@using System.Globalization
@using DirectoryManager.Data.Enums
@model IEnumerable<SponsoredListingOfferModel>
@inject DirectoryManager.Web.Services.Interfaces.ICacheService _cacheHelper
@using DirectoryManager.Utilities.Helpers
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor
@inject NowPayments.API.Interfaces.INowPaymentsService nowPaymentsService
@using DirectoryManager.Web.Helpers
@using Microsoft.Extensions.Caching.Memory
@inject IMemoryCache memoryCache

@{
    Layout = "_CenteredLayout";
    ViewData[StringConstants.TitleHeader] = "Select Listing Duration";
    ViewData[StringConstants.IsIndexable] = false;

    var offersList = Model.ToList();
    int defaultChoiceIndex = 0;

    // Reservation context (set by controller)
    Guid? reservationGuid =
        ViewBag.ReservationGuid is Guid g ? g : (Guid?)null;
    DateTime? reservationExpiresUtc =
        ViewBag.ReservationExpiresUtc is DateTime d ? d : (DateTime?)null;

    int? minutesLeft = reservationExpiresUtc.HasValue
        ? (int?)Math.Max(0, (int)Math.Ceiling((reservationExpiresUtc.Value - DateTime.UtcNow).TotalMinutes))
        : null;

    var conversionResult = await CurrencyConversionHelper.GetConversionContextAsync(httpContextAccessor, memoryCache, nowPaymentsService);
    bool showConverted = conversionResult.showConverted;
    decimal conversionRate = conversionResult.conversionRate;
}

@section PageContent {
    <h1>@ViewData[StringConstants.TitleHeader]</h1>

    <hr />

    <a href="~/sponsoredlisting/selectlisting?sponsorshipType=@ViewBag.SponsorshipType&subCategoryId=@ViewBag.SubCategoryId&categoryId=@ViewBag.CategoryId&rsvId=@ViewBag.ReservationGuid">&lt; back</a>

    <hr />

    @if (reservationGuid.HasValue && reservationExpiresUtc.HasValue)
    {
        <div class="alert alert-warning" role="alert">
            <strong>Reserved checkout:</strong>
            Your slot is held until
            <b>@reservationExpiresUtc.Value.ToString(DirectoryManager.Common.Constants.StringConstants.DateTimeFormat)</b> UTC
            (@minutesLeft minute@(minutesLeft == 1 ? "" : "s") left).
            Selecting a duration will keep using this reservation.
        </div>
    }

    <p><b>Name:</b> @ViewBag.DirectoryEntrName</p>
    <p><b>Sponsorship Type:</b> @DirectoryManager.Utilities.Helpers.EnumHelper.GetDescription(ViewBag.SponsorshipType)</p>

    @if (ViewBag.SponsorshipType == DirectoryManager.Data.Enums.SponsorshipType.SubcategorySponsor)
    {
        <p><b>Subcategory:</b> @ViewBag.Subcategory</p>
    }
    else if (ViewBag.SponsorshipType == DirectoryManager.Data.Enums.SponsorshipType.CategorySponsor)
    {
        <p><b>Category:</b> @ViewBag.Category</p>
    }

    <br />

    <form method="post" action="~/sponsoredlisting/selectduration">
        <input name="directoryEntryId" type="hidden" value="@ViewBag.DirectoryEntryId" />
        <input name="rsvId" type="hidden" value="@reservationGuid" />
        <input type="hidden" name="rsvId" value="@ViewBag.ReservationGuid" /> 

        <div class="form-group">
            <label>Available Options:</label>
            @for (var i = 0; i < offersList.Count; i++)
            {
                var offer = offersList[i];
                <div class="form-check">
                    <label class="form-check-label" style="display: flex; align-items: center;">
                        <input class="form-check-input"
                               type="radio"
                               name="selectedOfferId"
                               value="@offer.SponsoredListingOfferId"
                               @(i == defaultChoiceIndex ? "checked" : string.Empty) />
                        @offer.Days-Days -
                        @offer.USDPrice.ToString(
                        DirectoryManager.Common.Constants.StringConstants.CurrentFormat,
                                new CultureInfo(DirectoryManager.Common.Constants.StringConstants.DefaultCulure)) @Currency.USD
                <span>
                    &nbsp;&#8212;&nbsp;
                    @DirectoryManager.Utilities.Helpers.CurrencyFormatter.Format(offer.USDPrice, conversionRate, conversionResult.selectedCurrency, true)
                </span>
            </label>
        </div>
                }
    </div>

    @if (offersList.Count > 0)
    {
        <button type="submit" class="btn btn-primary">Select</button>
    }
    else
    {
        <p><i>No options</i></p>
    }
</form>
}
