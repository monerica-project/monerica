@using DirectoryManager.Data.Enums
@using DirectoryManager.Data.Models
@model IEnumerable<DirectoryEntry>
@using DirectoryManager.Web.Constants;

@{
    ViewData[StringConstants.IsIndexable] = false;
}

@{
  ViewData[StringConstants.TitleHeader] = "Select Sponsored Listing";
}

<h1>Select Sponsored Listing</h1>

<hr />
<a href="~/sponsoredlisting">&lt; back</a>
<hr />

<form method="get">
    <input name="sponsorshipType" type="hidden" value="@ViewBag.SponsorshipType" />
    <select id="combinedFilter" name="subCategoryId">
        <option value="">--Category > Subcategory--</option>
        @foreach (var subCategory in (IEnumerable<Subcategory>)ViewBag.SubCategories)
        {
            <option value="@subCategory.SubCategoryId" selected="@(Context.Request.Query["subCategoryId"] == 
            subCategory.SubCategoryId.ToString() ? "selected" : null)">@subCategory.Category.Name > @subCategory.Name</option>
        }
    </select>

    <input type="submit" value="Filter" />
</form>

<br />

@if (ViewBag.CanAdvertise != null && ViewBag.CanAdvertise == false)
{
    <i>There is no available ad space for this sub catetgory. Select another Subcategory.</i>
}
else
{
    @foreach (var entry in Model)
    {
        <div>

            <a rel="nofollow" href="@Url.Action("selectduration", new { 
                directoryEntryId = entry.DirectoryEntryId,
                sponsorshipType = ViewBag.SponsorshipType })">Select</a>
                     <text> - </text>
            <a target="_blank" href="@entry.Link">@entry.Name</a>
        </div>
    }
}
<br />
<p>
<i>Note: removed and scam listings cannot be sponsored listings.</i>
</p>