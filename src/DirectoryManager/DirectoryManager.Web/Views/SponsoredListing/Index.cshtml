@using DirectoryManager.Utilities.Helpers
@using DirectoryManager.Web.Constants;
@using DirectoryManager.Web.Models;
@inject DirectoryManager.Web.Services.Interfaces.ICacheService cacheHelper
@using DirectoryManager.Data.Enums;
@model DirectoryManager.Web.Models.SponsoredListingHomeModel;

@{
    ViewData[StringConstants.TitleHeader] = "Sponsored Listings";
}
<h1>@ViewData[StringConstants.TitleHeader]</h1>

<hr />
@await Html.PartialAsync("_BackToHome")
<hr />

<h2>Listing Details</h2>

<p>There are two types of advertising, <b>@EnumHelper.GetDescription(SponsorshipType.MainSponsor)</b> and <b>@EnumHelper.GetDescription(SponsorshipType.SubcategorySponsor)</b>.</p>
<p>See current offers and pricing: <a href="~/sponsoredlisting/offers">here</a>.</p>

<p>
    <b> Steps for listing:</b>
</p>

<ol>
    <li>Select your listing <i>(Note: your choice must currently be <a href="~/submit"> listed</a>)</i></li>
    <li>Choose your listing's duration</li>
    <li>Pay for your sponsored listing</li>
    <li>Your listing goes live automatically</li>
</ol>

<hr />

<h3>@EnumHelper.GetDescription(SponsorshipType.MainSponsor)</h3>

<p>
    @Html.Raw(cacheHelper.GetSnippet(SiteConfigSetting.MainSponsoredListingDetails))
</p>

@if (Model.CanCreateMainListing)
{
    <br />
    <p>
        <a class="btn" href="~/sponsoredlisting/selectlisting">Select Listing</a>        
    </p>
    <p><i>@(DirectoryManager.Common.Constants.IntegerConstants.MaxMainSponsoredListings - Model.CurrentListingCount) spot@((DirectoryManager.Common.Constants.IntegerConstants.MaxMainSponsoredListings - Model.CurrentListingCount) == 1 ? "" : "s") remaining</i></p>
}
else
{
    if (string.IsNullOrWhiteSpace(Model.Message))
    {
        @await Html.PartialAsync("_AdSpaceFull", new ListingInventoryModel()
       {
           CanCreateSponsoredListing = Model.CanCreateMainListing,
           NextListingExpiration = Model.NextListingExpiration
       });

        <p>However, you can extend the duration of an existing listing: <a href="~/sponsoredlisting/activelistings">here</a>.</p>
    }
    else
    {
        <p><i>@Model.Message</i></p>
    }

    <p>
    <a asp-controller="SponsoredListingNotification"
       asp-action="Subscribe"
       asp-route-sponsorshipType="MainSponsor">
        Notify me of openings for: @EnumHelper.GetDescription(SponsorshipType.MainSponsor)
    </a>
    </p>
}   

<hr />

<h3>@EnumHelper.GetDescription(SponsorshipType.SubcategorySponsor)</h3>

<p>
    @Html.Raw(cacheHelper.GetSnippet(SiteConfigSetting.SubcategorySponsoredListingDetails))
</p>

@if (Model.UnavailableSubCatetgories != null && Model.UnavailableSubCatetgories.Any())
{
    <p>Unavailable subcategory advertising:</p>

    <ul>
        @foreach (var item in Model.UnavailableSubCatetgories)
        {
            <li>
                @item.Value - 
                <a asp-controller="SponsoredListingNotification"
                   asp-action="Subscribe"
                   asp-route-sponsorshipType="SubcategorySponsor"
                   asp-route-subcategoryId="@item.Key">Notify me of openings</a>
            </li>
        }
    </ul>

    <p>You can extend the duration of an existing listing: <a href="~/sponsoredlisting/activelistings">here</a>.</p>

    <hr />
}

@if (Model.AvailableSubCatetgories != null && Model.AvailableSubCatetgories.Any())
{
    <p>Available subcategory advertising:</p>

    <ul>
    @foreach (var item in Model.AvailableSubCatetgories)
    {
        <li><a href="~/sponsoredlisting/selectlisting?subCategoryId=@item.Key&sponsorshipType=@SponsorshipType.SubcategorySponsor">@item.Value</a></li>
    }
    </ul>

    <p>You can extend the duration of an existing listing: <a href="~/sponsoredlisting/activelistings">here</a>.</p>
}
else
{
    <i>No more @EnumHelper.GetDescription(SponsorshipType.SubcategorySponsor) advertising space available.</i>
}