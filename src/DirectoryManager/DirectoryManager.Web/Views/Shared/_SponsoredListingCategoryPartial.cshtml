@model DirectoryManager.Web.Models.CategorySponsorModel
@using DirectoryManager.Utilities.Helpers
@using DirectoryManager.Web.Constants
@using DirectoryManager.Data.Enums
@using DirectoryManager.Data.Models
@inject DirectoryManager.Data.Repositories.Interfaces.IDirectoryEntryRepository directoryEntryRepository
@inject DirectoryManager.Data.Repositories.Interfaces.ISponsoredListingRepository sponsoredListingRepository
@inject DirectoryManager.Web.Services.Interfaces.ICacheService _cacheHelper

@{
    var link2Name = await _cacheHelper.GetSnippetAsync(SiteConfigSetting.Link2Name);
    var link3Name = await _cacheHelper.GetSnippetAsync(SiteConfigSetting.Link3Name);

    var hasModel = Model is not null;
    var dirVm = Model?.DirectoryEntry; // this is a DisplayFormatting VM in your model
    var hasEntry = dirVm is not null;

    var categoryId = Model?.CategoryId ?? 0;
    var advertiseHref = Url.Content($"~/sponsoredlisting/selectlisting?categoryId={categoryId}&sponsorshipType={SponsorshipType.CategorySponsor}");
}

@if (hasModel && hasEntry)
{
    var directoryEntries = new List<DirectoryManager.Data.Models.DirectoryEntry>
    {
        new DirectoryManager.Data.Models.DirectoryEntry
        {
            Name = dirVm!.Name,
            DirectoryEntryKey = dirVm.DirectoryEntryKey,
            Contact = dirVm.Contact,
            CreateDate = dirVm.CreateDate,
            Description = dirVm.Description,
            DirectoryBadge = dirVm.DirectoryBadge,
            DirectoryEntryId = dirVm.DirectoryEntryId,
            DirectoryStatus = dirVm.DirectoryStatus,
            Link = dirVm.Link,
            Link2 = dirVm.Link2,
            Link2A = dirVm.Link2A,
            Link3 = dirVm.Link3,
            Link3A = dirVm.Link3A,
            LinkA = dirVm.LinkA,
            Location = dirVm.Location,
            Note = dirVm.Note,
            Processor = dirVm.Processor,
            SubCategory = dirVm.SubCategory,
            SubCategoryId = dirVm.SubCategoryId ?? 0,
            UpdateDate = dirVm.UpdateDate
        }
    };

    <div class="sponsored-section" style="margin-bottom:5px;">
        <p><b>Sponsored</b></p>
        <ul class="blank_list_item">
            @{
                var viewModelList = DirectoryManager.DisplayFormatting.Helpers.ViewModelConverter.ConvertToViewModels(
                directoryEntries,
                DirectoryManager.DisplayFormatting.Enums.DateDisplayOption.NotDisplayed,
                DirectoryManager.DisplayFormatting.Enums.ItemDisplayType.CategorySponsor,
                link2Name,
                link3Name);
            }
            @foreach (var viewModel in viewModelList)
            {
                viewModel.IsSubCategorySponsor = true;
                viewModel.LinkType = DirectoryManager.DisplayFormatting.Enums.LinkType.Direct;
                @await Html.PartialAsync("_DirectoryEntryPartial", viewModel)
            }
        </ul>
    </div>
}
else
{
    <p class="category-sponsored-listing">
        <a class="app-link" rel="nofollow" href="@advertiseHref">Advertise here</a>
    </p>
}