@using DirectoryManager.Data.Enums
@using DirectoryManager.Data.Models
@using DirectoryManager.Web.Constants
@using DirectoryManager.Web.Models
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContext
@inject DirectoryManager.Web.Services.Interfaces.ICacheService cacheService
@inject DirectoryManager.Web.Services.Interfaces.IUrlResolutionService urlResolver
@using Microsoft.Extensions.Caching.Memory
@inject IMemoryCache MemoryCache
@inject DirectoryManager.Data.Repositories.Interfaces.ICategoryRepository categoryRepo
@inject DirectoryManager.Data.Repositories.Interfaces.ISubcategoryRepository subCatRepo

@{
    string currentCat = (string?)ViewData["CurrentCategoryKey"] ?? "";
    string currentSub = (string?)ViewData["CurrentSubCategoryKey"] ?? "";
}

@{
    // pull from cache or rebuild once per hour
    var navModel = await MemoryCache.GetOrCreateAsync(StringConstants.NavMenu, async entry =>
    {
        entry.AbsoluteExpirationRelativeToNow = TimeSpan.FromHours(1);

        var cats = await categoryRepo.GetActiveCategoriesAsync();
        var subs = await subCatRepo.GetAllActiveSubCategoriesAsync();
        var lookup = subs.GroupBy(sc => sc.CategoryId).ToDictionary(g => g.Key, g => g.ToList());
 
        return new NavigationViewModel
        {
            Categories = cats,
            SubsByCategory = lookup,
            // you’ll set these on each page below:
            CurrentCategoryKey = currentCat,
            CurrentSubCategoryKey = currentSub
        };
    });

    // now push it into ViewData so your layout/nav partial can pick it up
    ViewData["NavModel"] = navModel;
}

<details class="mobile-nav">
    <summary>Menu</summary>
    <ul>
        @foreach (var cat in navModel.Categories)
        {
            <li>
                <details open="@(cat.CategoryKey == currentCat)">
                    <summary>
                        <a class="no-app-link @(cat.CategoryKey == currentCat ? "active" : "")"
                           href="@urlResolver.ResolveToRoot(cat.CategoryKey)">
                            @cat.Name
                        </a>
                    </summary>
                    <ul>
                        @foreach (var sub in navModel.SubsByCategory[cat.CategoryId])
                        {
                            <li>
                                <a class="no-app-link @(cat.CategoryKey == currentCat && sub.SubCategoryKey == currentSub ? "active" : "")"
                                   href="@urlResolver.ResolveToRoot($"{cat.CategoryKey}/{sub.SubCategoryKey}")">
                                    @sub.Name
                                </a>
                            </li>
                        }
                    </ul>
                </details>
            </li>
        }
    </ul>
</details>

<nav class="sidebar">
    <div class="logo-container text-center mb-4">
        <a class="no-app-link" href="@urlResolver.ResolveToRoot("/")">
            <img src="@cacheService.GetSnippet(SiteConfigSetting.SiteLogoUrl)"
                 alt="Monerica Logo"
                 style="height:auto;" />
        </a>
    </div>

    <ul>
        @foreach (var cat in navModel.Categories)
        {
            var isCurrentCat = cat.CategoryKey == currentCat;
            var expanderId = $"{cat.CategoryKey}_expander";

            <li class="category-item">
                <label for="@expanderId" class="expander">+</label>
                <a class="no-app-link @(isCurrentCat ? "active" : "")"
                   href="@urlResolver.ResolveToRoot(cat.CategoryKey)">
                    @cat.Name
                </a>
                <input type="checkbox"
                       id="@expanderId"
                       class="hidden-toggle"
                       @(isCurrentCat ? "checked" : "") />
                <div class="hidden">
                    <ul>
                        @foreach (var sub in navModel.SubsByCategory[cat.CategoryId])
                        {
                            <li>
                                <a class="no-app-link @(isCurrentCat && sub.SubCategoryKey == currentSub ? "active" : "")"
                                   href="@urlResolver.ResolveToRoot($"{cat.CategoryKey}/{sub.SubCategoryKey}")">
                                    @sub.Name
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </li>
        }
    </ul>
</nav>