@using DirectoryManager.Data.Models
@using DirectoryManager.Web.Constants;
@using DirectoryManager.Data.Enums;
@inject DirectoryManager.Data.Repositories.Interfaces.IDirectoryEntryRepository directoryEntryRepository
@inject DirectoryManager.Data.Repositories.Interfaces.ISponsoredListingRepository sponsoredListingRepository
@inject DirectoryManager.Web.Services.Interfaces.ICacheService _cacheHelper
@model DirectoryManager.Web.Models.SubcategorySponsorModel

@{
    var directoryEntries = new List<DirectoryManager.Data.Models.DirectoryEntry>();
    var link2Name = _cacheHelper.GetSnippet(SiteConfigSetting.Link2Name);
    var link3Name = _cacheHelper.GetSnippet(SiteConfigSetting.Link3Name);
    var directoryEntry = Model?.DirectoryEntry;
}

@if (Model != null && directoryEntry != null)
{
    directoryEntries.Add(new DirectoryEntry()
    {
                    Name = directoryEntry.Name,
                    DirectoryEntryKey = directoryEntry.DirectoryEntryKey,
                    Contact = directoryEntry.Contact,
                    CreateDate = directoryEntry.CreateDate,
                    Description = directoryEntry.Description,
                    DirectoryBadge = directoryEntry.DirectoryBadge,
                    DirectoryEntryId = directoryEntry.DirectoryEntryId,
                    DirectoryStatus = directoryEntry.DirectoryStatus,
                    Link = directoryEntry.Link,
                    Link2 = directoryEntry.Link2,
                    Link2A = directoryEntry.Link2A,
                    Link3 = directoryEntry.Link3,
                    Link3A = directoryEntry.Link3A,
                    LinkA = directoryEntry.LinkA,
                    Location = directoryEntry.Location,
                    Note = directoryEntry.Note,
                    Processor = directoryEntry.Processor,
                    SubCategory = directoryEntry.SubCategory,
                    SubCategoryId = (directoryEntry.SubCategoryId == null) ? 0 : directoryEntry.SubCategoryId.Value,
                    UpdateDate = directoryEntry.UpdateDate
    });
    <div class="sponsored-section">
        <p><b>Sponsored</b></p>
        <ul class="blank_list_item">
            @{
                var viewModelList = DirectoryManager.DisplayFormatting.Helpers.ViewModelConverter.ConvertToViewModels(
                directoryEntries,
                DirectoryManager.DisplayFormatting.Enums.DateDisplayOption.NotDisplayed,
                DirectoryManager.DisplayFormatting.Enums.ItemDisplayType.MainSponsor,
                link2Name,
                link3Name);
            }
            @foreach (var viewModel in viewModelList)
            {
                viewModel.IsSubCategorySponsor = true;
                @await Html.PartialAsync("_DirectoryEntryPartial", viewModel)
            }
        </ul>
    </div>
}
else if (Model != null && Model.TotalActiveSubCategoryListings >= DirectoryManager.Common.Constants.IntegerConstants.MinimumSponsoredActiveSubcategories)
{<p class="sub-category-sponsored-listing">
        <a class="app-link" rel="nofollow" href="~/sponsoredlisting/selectlisting?subCategoryId=@Model.SubCategoryId&sponsorshipType=@SponsorshipType.SubcategorySponsor">Advertise here</a>
</p>
}